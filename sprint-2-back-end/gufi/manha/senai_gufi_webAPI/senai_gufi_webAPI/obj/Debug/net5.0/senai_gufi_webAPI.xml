<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai_gufi_webAPI</name>
    </assembly>
    <members>
        <member name="M:senai_gufi_webAPI.Controllers.LoginController.Login(senai_gufi_webAPI.ViewModels.LoginViewModel)">
            <summary>
            Valida o usuário
            </summary>
            <param name="login">Objeto login que contém o e-mail e a senha do usuário</param>
            <returns>Retorna um token com as informações do usuário</returns>
            dominio/api/Login
        </member>
        <member name="T:senai_gufi_webAPI.Controllers.TiposEventosController">
            <summary>
            Controller responsável pelos endpoints (URLs) referentes aos tipos de eventos
            </summary>
        </member>
        <member name="P:senai_gufi_webAPI.Controllers.TiposEventosController._TipoEventoRepository">
            <summary>
            Objeto _TipoEventoRepository que irá receber todos os métodos definidos na interface ITipoEventoRepository
            </summary>
        </member>
        <member name="M:senai_gufi_webAPI.Controllers.TiposEventosController.#ctor">
            <summary>
            Instancia o objeto _TipoEventoRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_gufi_webAPI.Controllers.TiposEventosController.Get">
            <summary>
            Lista todos os tipos de eventos
            </summary>
            <returns>Uma lista de tipos de eventos e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Controllers.TiposEventosController.GetById(System.Int32)">
            <summary>
            Busca um tipo de evento através do ID
            </summary>
            <param name="id">ID do tipo de evento que será buscado</param>
            <returns>Um tipo de evento buscado e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Controllers.TiposEventosController.Post(senai_gufi_webAPI.Domains.TipoEvento)">
            <summary>
            Cadastra um novo tipo de evento
            </summary>
            <param name="novoTipoEvento">Objeto novoTipoEvento que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Controllers.TiposEventosController.Put(System.Int32,senai_gufi_webAPI.Domains.TipoEvento)">
            <summary>
            Atualiza um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será atualizado</param>
            <param name="tipoEventoAtualizado">Objeto com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Controllers.TiposEventosController.Delete(System.Int32)">
            <summary>
            Deleta um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="T:senai_gufi_webAPI.Interfaces.IPresencaRepository">
            <summary>
            Interface responsável pelo PresencaRepository
            </summary>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.IPresencaRepository.ListarMinhas(System.Int32)">
            <summary>
            Lista todos os eventos que um determinado usuário participa
            </summary>
            <param name="idUsuario">ID do usuário que participa dos eventos listados</param>
            <returns>Uma lista de presenças com os dados dos eventos</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.IPresencaRepository.Inscrever(senai_gufi_webAPI.Domains.Presenca)">
            <summary>
            Cria uma nova presença
            </summary>
            <param name="inscricao">Objeto com as informações da inscrição</param>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.IPresencaRepository.AprovarRecusar(System.Int32,System.String)">
            <summary>
            Altera o status de uma presença
            </summary>
            <param name="idPresenca">ID da presença que terá a situação alterada</param>
            <param name="status">Parâmetro que atualiza a situação da presença para 1 - APROVADA, 2 - RECUSADA ou 3 - AGUARDANDO</param>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.ITiposEventoRepository.Listar">
            <summary>
            Lista todos os tipos de eventos
            </summary>
            <returns>Uma lista de tipos de eventos</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.ITiposEventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de evento através do ID
            </summary>
            <param name="id">ID do tipo de evento que será buscado</param>
            <returns>Um tipo de evento buscado</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.ITiposEventoRepository.Cadastrar(senai_gufi_webAPI.Domains.TipoEvento)">
            <summary>
            Cadastra um novo tipo de evento
            </summary>
            <param name="novoTipoEvento">Objeto novoTipoEvento que será cadastrado</param>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.ITiposEventoRepository.Atualizar(System.Int32,senai_gufi_webAPI.Domains.TipoEvento)">
            <summary>
            Atualiza um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será atualizado</param>
            <param name="tipoEventoAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.ITiposEventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será deletado</param>
        </member>
        <member name="M:senai_gufi_webAPI.Interfaces.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">E-mail do usuário</param>
            <param name="senha">Senha do usuário</param>
            <returns>Um objeto do tipo Usuario que foi encontrado</returns>
        </member>
        <member name="T:senai_gufi_webAPI.Repositories.PresencaRepository">
            <summary>
            Repositório responsável pelas presenças
            </summary>
        </member>
        <member name="F:senai_gufi_webAPI.Repositories.PresencaRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="T:senai_gufi_webAPI.Repositories.TiposEventoRepository">
            <summary>
            Classe responsável pelo repositório dos tipos de eventos
            </summary>
        </member>
        <member name="F:senai_gufi_webAPI.Repositories.TiposEventoRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:senai_gufi_webAPI.Repositories.TiposEventoRepository.Atualizar(System.Int32,senai_gufi_webAPI.Domains.TipoEvento)">
            <summary>
            Atualiza um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será atualizado</param>
            <param name="tipoEventoAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_gufi_webAPI.Repositories.TiposEventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de evento através do ID
            </summary>
            <param name="id">ID do tipo de evento que será buscado</param>
            <returns>Um tipo de evento buscado</returns>
        </member>
        <member name="M:senai_gufi_webAPI.Repositories.TiposEventoRepository.Cadastrar(senai_gufi_webAPI.Domains.TipoEvento)">
            <summary>
            Cadastra um novo tipo de evento
            </summary>
            <param name="novoTipoEvento">Objeto novoTipoEvento que será cadastrado</param>
        </member>
        <member name="M:senai_gufi_webAPI.Repositories.TiposEventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será deletado</param>
        </member>
        <member name="M:senai_gufi_webAPI.Repositories.TiposEventoRepository.Listar">
            <summary>
            Lista todos os tipos de eventos
            </summary>
            <returns>Uma lista de tipos de eventos</returns>
        </member>
        <member name="T:senai_gufi_webAPI.ViewModels.LoginViewModel">
            <summary>
            Classe responsável pelo modelo de Login
            </summary>
        </member>
    </members>
</doc>
